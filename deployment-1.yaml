apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: 733475720883.dkr.ecr.us-east-2.amazonaws.com/dsd:image3
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer


# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: my-app
# spec:
#   replicas: 2  # Updated to 2 replicas for 2 pods
#   selector:
#     matchLabels:
#       app: my-app
#   template:
#     metadata:
#       labels:
#         app: my-app
#     spec:
#       containers:
#       - name: my-app
#         image: 733475720883.dkr.ecr.us-east-2.amazonaws.com/dsd:dsddockerimage
#         ports:
#         - containerPort: 80
#         resources:
#           limits:
#             memory: "2Gi"  # Adjusted based on t3.medium capacity
#             cpu: "500m"   # Adjust as needed
#           requests:
#             memory: "1Gi"  # Adjusted based on t3.medium capacity
#             cpu: "250m"   # Adjust as needed
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: my-app-service
# spec:
#   selector:
#     app: my-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#   type: LoadBalancer
